// Generated by CoffeeScript 1.9.1
var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

exports.LayerSVG = (function(superClass) {
  extend(LayerSVG, superClass);

  function LayerSVG(options) {
    if (options == null) {
      options = {};
    }
    this.addShape = bind(this.addShape, this);
    this.shapes = [];
    LayerSVG.__super__.constructor.call(this, options);
    this.html = "<svg id='" + options.id + "' width='" + this.width + "' height='" + this.height + "'>/<svg>";
    this.svg = this.querySelector("#" + options.id);
  }

  LayerSVG.prototype.addShape = function(type, options) {
    var option, shape, value;
    if (options == null) {
      options = {};
    }
    shape = document.createElementNS("http://www.w3.org/2000/svg", "" + type);
    for (option in options) {
      if (!hasProp.call(options, option)) continue;
      value = options[option];
      shape.setAttributeNS(null, "" + option, "" + options[option]);
    }
    this.svg.appendChild(shape);
    this.shapes.push(shape);
    return shape;
  };

  return LayerSVG;

})(Layer);
